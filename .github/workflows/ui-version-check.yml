name: UI Version Check Tool

on:
  workflow_dispatch:
    inputs:
      lead_source:
        description: 'Lead Source'
        required: true
        type: choice
        options:
          - organic
          - paid
          - referral
          - direct
        default: 'organic'
      
      config_path:
        description: 'Config Path (evo, win, evo_native, winback)'
        required: true
        type: choice
        options:
          - evo
          - win
          - evo_native
          - winback
        default: 'evo'
      
      lender_config_id:
        description: 'Lender Config ID'
        required: true
        type: string
        default: '9054'
      
      workflow_mode:
        description: 'Analysis Mode'
        required: true
        type: choice
        options:
          - complete
          - ab-testing
          - journey
        default: 'complete'
      
      use_remote:
        description: 'Use Remote GitHub API (instead of local files)'
        required: false
        type: boolean
        default: true

jobs:
  ui-version-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Java (for PlantUML)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build UI Version Check Tool
      run: |
        make build
        chmod +x bin/ui-version-check
    
    - name: List Available Options (for reference)
      run: |
        echo "🔍 Available Configuration Options:"
        echo "=================================="
        ./bin/ui-version-check -list-options -config-path ${{ github.event.inputs.config_path }} -remote=${{ github.event.inputs.use_remote }} || {
          echo "⚠️  Remote access failed, this might be due to repository permissions."
          echo "💡 To fix this, add a TSOCIAL_ACCESS_TOKEN secret with access to the tsocial organization."
          echo "📖 See workflow documentation for setup instructions."
        }
      env:
        GITHUB_TOKEN: ${{ secrets.TSOCIAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
        CONFIG_REMOTE_URL: https://api.github.com/repos/tsocial/digital_journey
    
    - name: Run UI Version Analysis
      run: |
        echo "🚀 Starting UI Version Analysis..."
        echo "=================================="
        echo "Lead Source: ${{ github.event.inputs.lead_source }}"
        echo "Config Path: ${{ github.event.inputs.config_path }}"
        echo "Lender Config ID: ${{ github.event.inputs.lender_config_id }}"
        echo "Workflow Mode: ${{ github.event.inputs.workflow_mode }}"
        echo "Use Remote: ${{ github.event.inputs.use_remote }}"
        echo ""
        
        ./bin/ui-version-check \
          -config ${{ github.event.inputs.lender_config_id }} \
          -lead-source ${{ github.event.inputs.lead_source }} \
          -config-path ${{ github.event.inputs.config_path }} \
          -mode ${{ github.event.inputs.workflow_mode }} \
          -remote=${{ github.event.inputs.use_remote }} \
          -output ./results
      env:
        GITHUB_TOKEN: ${{ secrets.TSOCIAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
        CONFIG_REMOTE_URL: https://api.github.com/repos/tsocial/digital_journey
    
    - name: Upload Analysis Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-version-analysis-results-${{ github.event.inputs.lender_config_id }}-${{ github.event.inputs.lead_source }}
        path: |
          results/
          !results/**/*.jar
        retention-days: 30
    
    - name: Display Results Summary
      if: always()
      run: |
        echo "📊 Analysis Results Summary"
        echo "=========================="
        
        if [ -d "results/${{ github.event.inputs.lender_config_id }}" ]; then
          echo "✅ Analysis completed successfully!"
          echo ""
          echo "📁 Generated Files:"
          find results/${{ github.event.inputs.lender_config_id }} -type f | head -20
          echo ""
          
          # Show summary report if exists
          if [ -f "results/${{ github.event.inputs.lender_config_id }}/summary_report_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.md" ]; then
            echo "📋 Summary Report Preview:"
            echo "========================="
            head -50 "results/${{ github.event.inputs.lender_config_id }}/summary_report_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.md"
          fi
          
          # Show JSON analysis if exists
          if [ -f "results/${{ github.event.inputs.lender_config_id }}/ab_testing_analysis_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.json" ]; then
            echo ""
            echo "🔬 A/B Testing Analysis Preview:"
            echo "==============================="
            head -20 "results/${{ github.event.inputs.lender_config_id }}/ab_testing_analysis_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.json"
          fi
        else
          echo "❌ Analysis failed or no results generated"
          echo "Check the logs above for error details"
        fi
        
        echo ""
        echo "💾 Download the 'ui-version-analysis-results-${{ github.event.inputs.lender_config_id }}-${{ github.event.inputs.lead_source }}' artifact to get all generated files"

    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          const configId = '${{ github.event.inputs.lender_config_id }}';
          const leadSource = '${{ github.event.inputs.lead_source }}';
          const resultsDir = `results/${configId}`;
          
          let comment = `## 🔍 UI Version Analysis Results\n\n`;
          comment += `**Configuration:** ${configId} (${leadSource})\n`;
          comment += `**Mode:** ${{ github.event.inputs.workflow_mode }}\n`;
          comment += `**Config Path:** ${{ github.event.inputs.config_path }}\n\n`;
          
          if (fs.existsSync(resultsDir)) {
            comment += `✅ Analysis completed successfully!\n\n`;
            comment += `📁 **Generated Files:**\n`;
            
            const files = fs.readdirSync(resultsDir);
            files.forEach(file => {
              comment += `- ${file}\n`;
            });
            
            comment += `\n💾 Download the analysis results from the workflow artifacts.`;
          } else {
            comment += `❌ Analysis failed. Check the workflow logs for details.`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 