name: UI Version Check Tool

on:
  workflow_dispatch:
    inputs:
      lead_source:
        description: 'Lead Source'
        required: true
        type: choice
        options:
          - organic
          - evo_native
          - mwg_pos
          - seller_general
        default: 'organic'
      
      config_path:
        description: 'Config Path (evo, win, evo_native, winback)'
        required: true
        type: choice
        options:
          - evo
          - win
          - evo_native
          - winback
        default: 'evo'
      
      lender_config_id:
        description: 'Lender Config ID'
        required: true
        type: string
        default: '9054'
      
      workflow_mode:
        description: 'Analysis Mode'
        required: true
        type: choice
        options:
          - complete
          - ab-testing
          - journey
        default: 'complete'

jobs:
  ui-version-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: false
    
    - name: Set up Java (for PlantUML)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Download dependencies
      run: go mod download
    
    - name: Setup Sample Configuration Data
      run: |
        echo "🔧 Setting up sample configuration data..."
        mkdir -p vendor/configs/evo
        
        # Create sample configuration files for testing
        cat > vendor/configs/evo/9054_organic.json << 'CONFIG_EOF'
        {
          "id": 9054,
          "name": "v1.0.collect.organic",
          "tags": [
            {"name": "lead_source", "value": "organic"},
            {"name": "flow_type", "value": "collect"}
          ],
          "ui_version": "v9.1.5.0",
          "ui_flow": [
            "otp",
            "app_form.basic_info",
            "ekyc.selfie.active",
            "inform.success",
            "esign.review"
          ],
          "ui_flow_settings": {},
          "weight": 100
        }
        CONFIG_EOF
        
        cat > vendor/configs/evo/9012_organic.json << 'CONFIG_EOF'
        {
          "id": 9012,
          "name": "v1.0.diff_nation_id",
          "tags": [
            {"name": "lead_source", "value": "organic"},
            {"name": "flow_type", "value": "diff_nation_id"}
          ],
          "ui_version": "v9.1.4.0",
          "ui_flow": [
            "otp",
            "app_form.basic_info",
            "ekyc.selfie.active"
          ],
          "ui_flow_settings": {},
          "weight": 50
        }
        CONFIG_EOF
        
        echo "✅ Sample configuration created"
        echo "📁 Vendor configs:"
        find vendor/configs -name "*.json" | head -10
    
    - name: Build UI Version Check Tool
      run: |
        make build
        chmod +x bin/ui-version-check
    
    - name: Run UI Version Analysis
      id: analysis
      run: |
        echo "🚀 Starting UI Version Analysis..."
        echo "=================================="
        echo "Lead Source: ${{ github.event.inputs.lead_source }}"
        echo "Config Path: ${{ github.event.inputs.config_path }}"
        echo "Lender Config ID: ${{ github.event.inputs.lender_config_id }}"
        echo "Workflow Mode: ${{ github.event.inputs.workflow_mode }}"
        echo ""
        
        # Create output directory
        mkdir -p ./results
        echo "📁 Created output directory: ./results"
        
        # Run analysis and capture output
        echo "🔧 Running analysis command..."
        echo "=================================="
        ./bin/ui-version-check \
          -config ${{ github.event.inputs.lender_config_id }} \
          -lead-source ${{ github.event.inputs.lead_source }} \
          -config-path ${{ github.event.inputs.config_path }} \
          -mode ${{ github.event.inputs.workflow_mode }} \
          -output ./results | tee analysis_output.txt
        
        echo ""
        echo "✅ Analysis completed successfully!"
    
    - name: Upload Analysis Results
      uses: actions/upload-artifact@v4
      if: always() && hashFiles('results/**/*') != ''
      with:
        name: ui-version-analysis-results-${{ github.event.inputs.lender_config_id }}-${{ github.event.inputs.lead_source }}
        path: |
          results/
          !results/**/*.jar
        retention-days: 30
    
    - name: Display Results Summary
      if: always()
      run: |
        echo "📊 Analysis Results Summary"
        echo "=========================="
        echo "Configuration: ${{ github.event.inputs.lender_config_id }} (${{ github.event.inputs.lead_source }})"
        echo "Mode: ${{ github.event.inputs.workflow_mode }}"
        echo "Config Path: ${{ github.event.inputs.config_path }}"
        echo ""
        
        # Display the analysis output
        if [ -f "analysis_output.txt" ]; then
          echo "📋 Analysis Output:"
          echo "-------------------"
          cat analysis_output.txt
          echo ""
        fi
        
        # Check for generated files
        if [ -d "results/${{ github.event.inputs.lender_config_id }}" ]; then
          echo "✅ Analysis completed with generated files!"
          echo ""
          echo "📁 Generated Files:"
          find results/${{ github.event.inputs.lender_config_id }} -type f | head -20
          echo ""
          
          # Display summary report if it exists
          SUMMARY_FILE="results/${{ github.event.inputs.lender_config_id }}/summary_report_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.md"
          if [ -f "$SUMMARY_FILE" ]; then
            echo "📄 Summary Report:"
            echo "=================="
            cat "$SUMMARY_FILE"
            echo ""
          fi
          
          # Display JSON results preview for different modes
          if [ "${{ github.event.inputs.workflow_mode }}" = "ab-testing" ] || [ "${{ github.event.inputs.workflow_mode }}" = "complete" ]; then
            AB_FILE="results/${{ github.event.inputs.lender_config_id }}/ab_testing_analysis_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.json"
            if [ -f "$AB_FILE" ]; then
              echo "🔬 A/B Testing Results Preview:"
              echo "--------------------------------"
              head -n 50 "$AB_FILE" | jq '.' 2>/dev/null || head -n 50 "$AB_FILE"
              echo ""
            fi
          fi
          
          if [ "${{ github.event.inputs.workflow_mode }}" = "journey" ] || [ "${{ github.event.inputs.workflow_mode }}" = "complete" ]; then
            JOURNEY_FILE="results/${{ github.event.inputs.lender_config_id }}/journey_analysis_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.json"
            if [ -f "$JOURNEY_FILE" ]; then
              echo "🗺️ Journey Analysis Results Preview:"
              echo "-------------------------------------"
              head -n 50 "$JOURNEY_FILE" | jq '.' 2>/dev/null || head -n 50 "$JOURNEY_FILE"
              echo ""
            fi
          fi
          
          echo "💾 Download the 'ui-version-analysis-results-${{ github.event.inputs.lender_config_id }}-${{ github.event.inputs.lead_source }}' artifact to get all generated files"
        else
          echo "⚠️ No additional files were generated in results directory"
          echo "The analysis output above shows what was discovered"
        fi
    
    - name: Create Job Summary
      if: always()
      run: |
        # Create GitHub Job Summary (displayed prominently in the Actions UI)
        echo "# 📊 UI Version Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Configuration" >> $GITHUB_STEP_SUMMARY
        echo "| Parameter | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Lender Config ID** | \`${{ github.event.inputs.lender_config_id }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Lead Source** | \`${{ github.event.inputs.lead_source }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Config Path** | \`${{ github.event.inputs.config_path }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Analysis Mode** | \`${{ github.event.inputs.workflow_mode }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Add analysis output
        if [ -f "analysis_output.txt" ]; then
          echo "## 🔍 Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat analysis_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Add summary report if exists
        SUMMARY_FILE="results/${{ github.event.inputs.lender_config_id }}/summary_report_${{ github.event.inputs.lender_config_id }}_${{ github.event.inputs.lead_source }}.md"
        if [ -f "$SUMMARY_FILE" ]; then
          echo "## 📄 Detailed Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat "$SUMMARY_FILE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Add file list
        if [ -d "results/${{ github.event.inputs.lender_config_id }}" ]; then
          echo "## 📁 Generated Files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following files were generated:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          find results/${{ github.event.inputs.lender_config_id }} -type f -exec basename {} \; | sort | uniq >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 **Download the artifact** \`ui-version-analysis-results-${{ github.event.inputs.lender_config_id }}-${{ github.event.inputs.lead_source }}\` to get all files" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Analysis completed at:** $(date)" >> $GITHUB_STEP_SUMMARY
